<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://niuxiaocong.github.io/atom.xml" rel="self"/>
  
  <link href="https://niuxiaocong.github.io/"/>
  <updated>2021-08-23T15:35:13.142Z</updated>
  <id>https://niuxiaocong.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法基础</title>
    <link href="https://niuxiaocong.github.io/2021/08/23/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    <id>https://niuxiaocong.github.io/2021/08/23/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</id>
    <published>2021-08-23T09:13:20.000Z</published>
    <updated>2021-08-23T15:35:13.142Z</updated>
    
    <content type="html"><![CDATA[<p>异或操作规律</p><p>性质1</p><p>0^N = N，N^N = 0</p><p>性质2</p><p>异或运算满足交换律和结合律</p><p>a^b = b^a </p><p>a^b^c = a^(b^c)</p><h3 id="题目：在一个数组中，已知只有一个数出现了奇数次，其他的数出现了偶数次，请找出这个出现奇数次的数"><a href="#题目：在一个数组中，已知只有一个数出现了奇数次，其他的数出现了偶数次，请找出这个出现奇数次的数" class="headerlink" title="题目：在一个数组中，已知只有一个数出现了奇数次，其他的数出现了偶数次，请找出这个出现奇数次的数"></a>题目：在一个数组中，已知只有一个数出现了奇数次，其他的数出现了偶数次，请找出这个出现奇数次的数</h3><h3>那么有两种出现了奇数次，剩余的数出现了偶数次，应该怎么找</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuestOneDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="comment">//printOddTiemsNumsOne(arr);</span></span><br><span class="line">printOddTiemsNumsTwo(arr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第一個問題</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printOddTiemsNumsOne</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> eor = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> cur : arr) &#123;</span><br><span class="line">eor ^= cur;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(eor);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第二个问题</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printOddTiemsNumsTwo</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> eor = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> cur : arr) &#123;</span><br><span class="line">eor ^= cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//eor = a^b</span></span><br><span class="line"><span class="comment">//eor != 0</span></span><br><span class="line"><span class="comment">//eor 位置上必然有一個是1</span></span><br><span class="line"><span class="keyword">int</span> rightOne = eor &amp; (~eor + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> onlyOne = <span class="number">0</span>; <span class="comment">//eor&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> cur : arr) &#123;</span><br><span class="line"><span class="keyword">if</span>((cur &amp; rightOne) == <span class="number">1</span>) &#123;</span><br><span class="line">onlyOne ^= cur;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(onlyOne + <span class="string">&quot; &quot;</span> + (eor ^ onlyOne));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="题目：二分查找法"><a href="#题目：二分查找法" class="headerlink" title="题目：二分查找法"></a>题目：二分查找法</h3><ul><li>在一个有序的数组中，寻找某个数是否存在</li></ul><p>两种思路递归和非递归</p><h4 id="非递归方式"><a href="#非递归方式" class="headerlink" title="非递归方式"></a>非递归方式</h4><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//非递归的方式</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">doubleBranch</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(arr == <span class="keyword">null</span> || arr.length == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> right = arr.length-<span class="number">1</span>;<span class="comment">//右侧的指针</span></span><br><span class="line"><span class="keyword">int</span> left = <span class="number">0</span>;   <span class="comment">//左侧指针</span></span><br><span class="line"><span class="keyword">int</span> mid = <span class="number">0</span>;   <span class="comment">//中间指针</span></span><br><span class="line"><span class="keyword">boolean</span> isFind = <span class="keyword">false</span>;<span class="comment">//是否找到target目标元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(right&gt;=left) &#123;<span class="comment">//左侧指针如果大于右侧指针则结束循环</span></span><br><span class="line">mid = (right + left) / <span class="number">2</span>;<span class="comment">//找到中间元素的坐标</span></span><br><span class="line"><span class="keyword">if</span>(arr[mid] == target) &#123;<span class="comment">//找到 将isFind 置为true</span></span><br><span class="line">isFind = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid] &gt; target) &#123;<span class="comment">//证明目标元素在左侧</span></span><br><span class="line">right = mid -<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;   <span class="comment">//证明目标元素在这个数组中间位置的右侧</span></span><br><span class="line">left = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> isFind;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="递归方式"><a href="#递归方式" class="headerlink" title="递归方式"></a>递归方式</h4><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归方式实现</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">doubleBranchDiGui</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> L = left;</span><br><span class="line"><span class="keyword">int</span> R = right;</span><br><span class="line"><span class="keyword">int</span> Mid = (R - L)/<span class="number">2</span> + L;</span><br><span class="line"><span class="keyword">boolean</span> isFind = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(arr[Mid] &gt; target) &#123;</span><br><span class="line"><span class="keyword">return</span> doubleBranchDiGui(arr, L, Mid-<span class="number">1</span>,target);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[Mid] &lt; target) &#123;</span><br><span class="line"><span class="keyword">return</span> doubleBranchDiGui(arr, Mid+<span class="number">1</span>,R,target);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[Mid] == target)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在一个有序的数组中，找&gt;=某个数最左侧的位置</li></ul><ul><li>局部最小值问题</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;异或操作规律&lt;/p&gt;
&lt;p&gt;性质1&lt;/p&gt;
&lt;p&gt;0^N = N，N^N = 0&lt;/p&gt;
&lt;p&gt;性质2&lt;/p&gt;
&lt;p&gt;异或运算满足交换律和结合律&lt;/p&gt;
&lt;p&gt;a^b = b^a &lt;/p&gt;
&lt;p&gt;a^b^c = a^(b^c)&lt;/p&gt;
&lt;h3 id=&quot;题目：在一个数组中，已</summary>
      
    
    
    
    
    <category term="数据结构" scheme="https://niuxiaocong.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="https://niuxiaocong.github.io/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://niuxiaocong.github.io/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2021-08-23T03:00:20.000Z</published>
    <updated>2021-08-23T15:35:18.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用的排序算法"><a href="#常用的排序算法" class="headerlink" title="常用的排序算法"></a>常用的排序算法</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><img src="/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image-20210823115539098.png" alt="image-20210823115539098"></p><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sort;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr= &#123;<span class="number">101</span>,<span class="number">34</span>,<span class="number">119</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length-<span class="number">1</span>;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr.length-<span class="number">1</span>-i;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line">temp = arr[j];</span><br><span class="line">arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p><img src="/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image-20210823115556329.png" alt="image-20210823115556329"></p><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr= &#123;<span class="number">101</span>,<span class="number">34</span>,<span class="number">119</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length-<span class="number">1</span>;i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> minIndex = i;</span><br><span class="line"><span class="keyword">int</span> minSum=arr[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>+<span class="number">1</span>;j&lt;arr.length;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(minSum&gt;arr[j]) &#123;</span><br><span class="line">minSum = arr[j];</span><br><span class="line">minIndex = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(minIndex!=i) &#123;</span><br><span class="line">arr[minIndex] = arr[i];</span><br><span class="line">arr[i] = minSum;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p><img src="/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image-20210823184037483.png" alt="image-20210823184037483"></p><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sort3;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertSortDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">9</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>&#125;;</span><br><span class="line">insertSort(arr);</span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(arr == <span class="keyword">null</span> || arr.length&lt;<span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i-<span class="number">1</span>;j&gt;=<span class="number">0</span> &amp;&amp; arr[j]&gt;arr[j+<span class="number">1</span>];j--) &#123;</span><br><span class="line">swap(arr, i, j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//交换方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = arr[i];</span><br><span class="line">arr[i] = arr[j];</span><br><span class="line">arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p><img src="/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image-20210823115608580.png" alt="image-20210823115608580"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeSortDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//int[] arr = &#123;1,3,5,2,4,6&#125;;</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">process(arr,<span class="number">0</span>,arr.length-<span class="number">1</span>);</span><br><span class="line"><span class="comment">//process(arr, 0, arr.length-1);</span></span><br><span class="line"><span class="comment">//merger(arr,0,(arr.length-1)/2,arr.length-1);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//递归方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L == R) &#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = L+((R-L)/<span class="number">2</span>);</span><br><span class="line"><span class="comment">//int mid = (L+R)/2;</span></span><br><span class="line">process(arr,L,mid);</span><br><span class="line">process(arr,mid+<span class="number">1</span>,R);</span><br><span class="line">merge(arr,L,mid,R);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//合并方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> arr[],<span class="keyword">int</span> L,<span class="keyword">int</span> M,<span class="keyword">int</span> R)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] help = <span class="keyword">new</span> <span class="keyword">int</span>[R-L+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p1 = L;</span><br><span class="line"><span class="keyword">int</span> p2 = M+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p1&lt;=M&amp;&amp;p2&lt;=R) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[p1]&lt;arr[p2]) &#123;</span><br><span class="line">help[i] = arr[p1];</span><br><span class="line">i++;</span><br><span class="line">p1++;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">help[i] = arr[p2];</span><br><span class="line">i++;</span><br><span class="line">p2++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p1&lt;=M) &#123;</span><br><span class="line">help[i++] = arr[p1++];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p2&lt;=R) &#123;</span><br><span class="line">help[i++] = arr[p2++];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; help.length; i++) &#123;</span><br><span class="line">arr[L+i] = help[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;归并：&quot;</span>+Arrays.toString(help));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p>排序算法中时间复杂度和空间复杂度的对比</p><p><img src="/2021/08/23/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/image-20210823171038054.png" alt="image-20210823171038054"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用的排序算法&quot;&gt;&lt;a href=&quot;#常用的排序算法&quot; class=&quot;headerlink&quot; title=&quot;常用的排序算法&quot;&gt;&lt;/a&gt;常用的排序算法&lt;/h1&gt;&lt;h2 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="数据结构" scheme="https://niuxiaocong.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>栈</title>
    <link href="https://niuxiaocong.github.io/2021/08/23/%E6%A0%88/"/>
    <id>https://niuxiaocong.github.io/2021/08/23/%E6%A0%88/</id>
    <published>2021-08-23T02:34:59.000Z</published>
    <updated>2021-08-23T03:57:07.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="栈结构"><a href="#栈结构" class="headerlink" title="栈结构"></a>栈结构</h1><p><img src="/2021/08/23/%E6%A0%88/image-20210823105728346.png" alt="image-20210823105728346"></p><h2 id="使用数组模拟栈结构代码实现"><a href="#使用数组模拟栈结构代码实现" class="headerlink" title="使用数组模拟栈结构代码实现"></a>使用数组模拟栈结构代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用数组来模拟栈结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayStackDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">StackArr stack = <span class="keyword">new</span> StackArr(<span class="number">4</span>);</span><br><span class="line"><span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">char</span> key = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(loop) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;e(exit) 退出&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;a(add) 入栈操作&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;r(remove) 出栈操作&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;t(top) 查看当前栈顶的元素&quot;</span>);</span><br><span class="line">key = scan.next().charAt(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(key) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;**********退出程序**********&quot;</span>);</span><br><span class="line">loop = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;**********请输入要入栈的数据**********&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> val = scan.nextInt();</span><br><span class="line">stack.push(val);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;r&#x27;</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;**********出栈一个数据**********&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> pop = stack.pop();</span><br><span class="line">System.out.println(<span class="string">&quot;出栈的元素是：&quot;</span>+pop);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;t&#x27;</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;**********查看当前的栈顶元素**********&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> top = stack.top();</span><br><span class="line">System.out.println(<span class="string">&quot;当前栈顶的元素是：&quot;</span>+top);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">System.out.println(<span class="string">&quot;没有这条指令，重新输入&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//栈的一个结构</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StackArr</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">null</span>;   <span class="comment">//使用数组模拟栈结构</span></span><br><span class="line"><span class="keyword">int</span> maxSize;        <span class="comment">//栈的最大容量</span></span><br><span class="line"><span class="keyword">int</span> top;<span class="comment">//栈顶指针</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StackArr</span><span class="params">(<span class="keyword">int</span> maxSize)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.maxSize = maxSize;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">top = -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//空栈</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> top==-<span class="number">1</span>?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//满栈</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> top==maxSize-<span class="number">1</span>?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//入栈操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isFull()) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;满栈，无法加入~~&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">arr[++top] = n; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//出栈操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isEmpty()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;空栈，无法进行pop操作&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> value = arr[top--];</span><br><span class="line"><span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查看栈顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isEmpty()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;空栈，栈顶为空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> arr[top];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;栈结构&quot;&gt;&lt;a href=&quot;#栈结构&quot; class=&quot;headerlink&quot; title=&quot;栈结构&quot;&gt;&lt;/a&gt;栈结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2021/08/23/%E6%A0%88/image-20210823105728346.png&quot; alt=&quot;</summary>
      
    
    
    
    
    <category term="数据结构" scheme="https://niuxiaocong.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署到Github</title>
    <link href="https://niuxiaocong.github.io/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/"/>
    <id>https://niuxiaocong.github.io/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/</id>
    <published>2021-08-23T00:46:53.000Z</published>
    <updated>2021-08-23T02:33:30.826Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Hexo搭建一个网站"><a href="#使用Hexo搭建一个网站" class="headerlink" title="使用Hexo搭建一个网站"></a>使用Hexo搭建一个网站</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要环境</span><br><span class="line">Node.js  14.17.5 (建议在12版本以上都可以)</span><br></pre></td></tr></table></figure><p>Node.js 安装略</p><p>Git 安装略</p><h2 id="安装Hexo的脚手架"><a href="#安装Hexo的脚手架" class="headerlink" title="安装Hexo的脚手架"></a>安装Hexo的脚手架</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823090843614.png" alt="image-20210823090843614"></p><h2 id="执行初始化命令"><a href="#执行初始化命令" class="headerlink" title="执行初始化命令"></a>执行初始化命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">他会从github上下载模板，速度会有点慢，也可能会下载失败，多下载几次既可以了</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822181109062.png" alt="image-20210822181109062"></p><h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g 或者</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822181408143.png" alt="image-20210822181408143"></p><p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822181445442.png" alt="image-20210822181445442"></p><p>默认的端口是4000</p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822181538026.png" alt="image-20210822181538026"></p><p>一个简单的网站就搭建完毕了。接下来是发布到GitHub上</p><h1 id="发布到GitHub"><a href="#发布到GitHub" class="headerlink" title="发布到GitHub"></a>发布到GitHub</h1><p>创建gitHub账户略</p><h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822182336588.png" alt="image-20210822182336588"></p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822182513150.png" alt="image-20210822182513150"></p><h2 id="配置-config-yml中有关deploy的部分"><a href="#配置-config-yml中有关deploy的部分" class="headerlink" title="配置_config.yml中有关deploy的部分"></a>配置<code>_config.yml</code>中有关deploy的部分</h2><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822182905468.png" alt="image-20210822182905468"></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>在部署的时候一定要用git bash，会省去很多不必要的麻烦</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822183235152.png" alt="image-20210822183235152"></p><p>出现这个不要慌，因为后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报上面的这个错误。</p><p>安装一个插件即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822183444479.png" alt="image-20210822183444479"></p><p>提交到GitHub仓库</p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822183850300.png" alt="image-20210822183850300"></p><p>部署命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br><span class="line">或者</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210822213357819.png" alt="image-20210822213357819"></p><p>总结：部署的步骤</p><p>hexo clean  清空一下生成的html</p><p>hexo generate 重新生成html</p><p>hexo deploy 部署</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHubhexo help  # 查看帮助hexo version  #查看Hexo的版本</span><br><span class="line"></span><br><span class="line">简写</span><br><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><h2 id="找主题克隆到本地"><a href="#找主题克隆到本地" class="headerlink" title="找主题克隆到本地"></a>找主题克隆到本地</h2><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823062446217.png" alt="image-20210823062446217"></p><p>进入Github以后将他Clone到本地，克隆到本地的themes文件夹下，然后重命名为上图左下角GitHub链接名Life，可能会受到网络的影响，一次克隆不下来，多克隆几次就好</p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823062703453.png" alt="image-20210823062703453"></p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823063451936.png" alt="image-20210823063451936"></p><h2 id="修改Hexo的配置"><a href="#修改Hexo的配置" class="headerlink" title="修改Hexo的配置"></a>修改Hexo的配置</h2><p>找到 _config.yml文件夹</p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823063752179.png" alt="image-20210823063752179"></p><h2 id="重新生成代码"><a href="#重新生成代码" class="headerlink" title="重新生成代码"></a>重新生成代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p> 重新跑起来以后出现如下这种情况，缺少hexo-renderer-swig这个依赖</p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823064814169.png" alt="image-20210823064814169"></p><p>使用以下命令解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure><p>下载完成 以后重新 hexo clean 清除缓存 hexo g 重新生成 hexo s 重新启动，如此一来更换主题就完成了</p><p><img src="/2021/08/23/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github/image-20210823065744360.png" alt="image-20210823065744360"></p><p>如果想要部署到GitHub 直接hexo d即可</p><h1 id="解决图片显示不了的问题"><a href="#解决图片显示不了的问题" class="headerlink" title="解决图片显示不了的问题"></a>解决图片显示不了的问题</h1><p>1.首先安装一下依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>2.然后把_config.yml中的post_asset_folder设为true，这个配置的意思是每次new post一个博客，会增加一个和博客同名的文件夹。</p><p>3.最后重新发布就行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用Hexo搭建一个网站&quot;&gt;&lt;a href=&quot;#使用Hexo搭建一个网站&quot; class=&quot;headerlink&quot; title=&quot;使用Hexo搭建一个网站&quot;&gt;&lt;/a&gt;使用Hexo搭建一个网站&lt;/h1&gt;&lt;figure class=&quot;highlight plaintex</summary>
      
    
    
    
    <category term="前端" scheme="https://niuxiaocong.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Hexo" scheme="https://niuxiaocong.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
